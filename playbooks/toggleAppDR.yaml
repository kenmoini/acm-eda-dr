# This ansible playbook is triggered via EDA from Alertmanager alerts.
# This has the context of the cluster that is down, so start there
---

- name: Set some basic facts
  ansible.builtin.set_fact:
    policyName: "{{ ansible_eda.event.alert.labels.policy | split('.') | last }}"

- name: Dump policyName
  debug:
    msg: "{{ policyName }}"

# foo
- name: Get the list of clusters that are offline - foo unreachable
  when: policyName == "health-mc-addons-foo-test"
  kubernetes.core.k8s_info:
    api_version: cluster.open-cluster-management.io/v1
    kind: ManagedCluster
    label_selectors:
      - feature.open-cluster-management.io/foo = unreachable
  register: policyHealthMCAddonsFooTestUnreachable

- name: Get the list of clusters that are offline - foo unhealthy
  when: policyName == "health-mc-addons-foo-test"
  kubernetes.core.k8s_info:
    api_version: cluster.open-cluster-management.io/v1
    kind: ManagedCluster
    label_selectors:
      - feature.open-cluster-management.io/foo = unhealthy
  register: policyHealthMCAddonsFooTestUnhealthy

- name: Dump policyHealthMCAddonsFooTestUnreachable
  debug:
    msg: "{{ policyHealthMCAddonsFooTestUnreachable }}"
- name: Dump policyHealthMCAddonsFooTestUnhealthy
  debug:
    msg: "{{ policyHealthMCAddonsFooTestUnhealthy }}"

# Hacky slashy eda acm dr demo things
# policyHealthMCAddonsFooTestUnreachable
- name: Extract the cluster labels and name
  set_fact:
    clusterLabels: "{{ clusterLabels | default({}) + combine( { item.metadata.name: item.metadata.labels } ) }}"
  loop: "{{ policyHealthMCAddonsFooTestUnreachable.resources }}"

- name: Dump clusterLabels
  debug:
    msg: "{{ clusterLabels }}"


# gov-pol-frmwk

- name: Get the list of clusters that are offline - gov-pol-frmwk unreachable
  when: policyName == "health-mc-addons-gov-pol-frmwk"
  kubernetes.core.k8s_info:
    api_version: cluster.open-cluster-management.io/v1
    kind: ManagedCluster
    label_selectors:
      - feature.open-cluster-management.io/addon-governance-policy-framework = unreachable

- name: Get the list of clusters that are offline - gov-pol-frmwk unhealthy
  when: policyName == "health-mc-addons-gov-pol-frmwk"
  kubernetes.core.k8s_info:
    api_version: cluster.open-cluster-management.io/v1
    kind: ManagedCluster
    label_selectors:
      - feature.open-cluster-management.io/addon-governance-policy-framework = unhealthy

# addon-application-manager

- name: Get the list of clusters that are offline - app-mgr unreachable
  when: policyName == "health-mc-addons-app-mgr"
  kubernetes.core.k8s_info:
    api_version: cluster.open-cluster-management.io/v1
    kind: ManagedCluster
    label_selectors:
      - feature.open-cluster-management.io/addon-application-manager = unreachable

- name: Get the list of clusters that are offline - app-mgr unhealthy
  when: policyName == "health-mc-addons-app-mgr"
  kubernetes.core.k8s_info:
    api_version: cluster.open-cluster-management.io/v1
    kind: ManagedCluster
    label_selectors:
      - feature.open-cluster-management.io/addon-application-manager = unhealthy

# mgsvcact

- name: Get the list of clusters that are offline - mgsvcact unreachable
  when: policyName == "health-mc-addons-mgsvcact"
  kubernetes.core.k8s_info:
    api_version: cluster.open-cluster-management.io/v1
    kind: ManagedCluster
    label_selectors:
      - feature.open-cluster-management.io/addon-managed-serviceaccount = unreachable

- name: Get the list of clusters that are offline - mgsvcact unhealthy
  when: policyName == "health-mc-addons-mgsvcact"
  kubernetes.core.k8s_info:
    api_version: cluster.open-cluster-management.io/v1
    kind: ManagedCluster
    label_selectors:
      - feature.open-cluster-management.io/addon-managed-serviceaccount = unhealthy

# addon-search-collector

- name: Get the list of clusters that are offline - search unreachable
  when: policyName == "health-mc-addons-search"
  kubernetes.core.k8s_info:
    api_version: cluster.open-cluster-management.io/v1
    kind: ManagedCluster
    label_selectors:
      - feature.open-cluster-management.io/addon-search-collector = unreachable

- name: Get the list of clusters that are offline - search unhealthy
  when: policyName == "health-mc-addons-search"
  kubernetes.core.k8s_info:
    api_version: cluster.open-cluster-management.io/v1
    kind: ManagedCluster
    label_selectors:
      - feature.open-cluster-management.io/addon-search-collector = unhealthy

# o11y

- name: Get the list of clusters that are offline - o11y unreachable
  when: policyName == "health-mc-addons-o11y"
  kubernetes.core.k8s_info:
    api_version: cluster.open-cluster-management.io/v1
    kind: ManagedCluster
    label_selectors:
      - feature.open-cluster-management.io/addon-observability-controller = unreachable

- name: Get the list of clusters that are offline - o11y unhealthy
  when: policyName == "health-mc-addons-o11y"
  kubernetes.core.k8s_info:
    api_version: cluster.open-cluster-management.io/v1
    kind: ManagedCluster
    label_selectors:
      - feature.open-cluster-management.io/addon-observability-controller = unhealthy

# cluster-proxy

- name: Get the list of clusters that are offline - cluster-proxy unreachable
  when: policyName == "health-mc-addons-cluster-proxy"
  kubernetes.core.k8s_info:
    api_version: cluster.open-cluster-management.io/v1
    kind: ManagedCluster
    label_selectors:
      - feature.open-cluster-management.io/addon-cluster-proxy = unreachable

- name: Get the list of clusters that are offline - cluster-proxy unhealthy
  when: policyName == "health-mc-addons-cluster-proxy"
  kubernetes.core.k8s_info:
    api_version: cluster.open-cluster-management.io/v1
    kind: ManagedCluster
    label_selectors:
      - feature.open-cluster-management.io/addon-cluster-proxy = unhealthy

# - name: Loop through the offline cluster labels, find matching labels and get the list of applications
# - name: DR Logic
#   block:
#     - name: Check for application needing DR (if appName.appGroupingKeySuffix is set)
#     - name: Check if this is the primary or secondary cluster (switch appName.appClusterTargetKeyPrefix)
#     - name: Check if the application is placed on this cluster (if appName.appPlacementKeyPrefix is set)

#     - name: Handle is this offline cluster is the Primary and we need to failover to the Secondary cluster
#       when:
#         - appDREnabled == true
#         - appClusterTarget == primary
#         - appPlacement is defined
#       block:
#         - name: Get the secondary cluster for this application
#         - name: Make sure it's online
#         - name: IF - the secondary cluster is ALSO offline - go scream at someone's pager a bit more
#         - name: ELSE - Add the placement label to the secondary cluster
#         - name: ELSE - Remove the placement label from the primary cluster
#         - name: ELSE - Do some GLB/DNS things

#     - name: Handle a situation when this is the secondary cluster offline
#       when:
#         - appDREnabled == true
#         - appClusterTarget == secondary
#         - appPlacement is defined
#       block:
#         - name: Scream at someone's pager a bit more maybe
#         - name: Get the primary cluster for this application
#         - name: Make sure it's online
#         - name: IF - the primary cluster is ALSO offline - go scream at someone's pager a bit more
#         - name: ELSE - Add the placement label to the primary cluster
#         - name: ELSE - Remove the placement label from the secondary cluster
#         - name: ELSE - Do some GLB/DNS things